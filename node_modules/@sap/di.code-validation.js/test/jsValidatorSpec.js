var expect = require('chai').expect;
var assert = require('chai').assert;
var sinon = require('sinon');
var path = require('path');
var assert = require('assert');

var jsvalidator = require('../src/jsValidator');
var ValidationMetadata = require("@sap/di.code-validation.core").validationMetadata;
var FileResource = require("@sap/di.code-validation.core").fileResource;

describe('jsvalidator test', function () {

    var sandbox;
    beforeEach(function () {
        sandbox = sinon.sandbox.create();
    });

    function assertInIssues(issues, expectedIssue) {
        var found = false;
        issues.forEach(function (issue) {
            if (issue.ruleId === expectedIssue.ruleId && issue.column === expectedIssue.column && issue.line === expectedIssue.line) {
                expect(issue).to.deep.equal(expectedIssue);
                found = true;
            }
        });
        if (!found) [
            assert.fail(expectedIssue, issues, "issue not found in result:\n expected \n" + JSON.stringify(expectedIssue) + "\n in \n" + JSON.stringify(issues))
        ]
    }

    function assetNotInIssues(issues, expectedIssue) {
        var foundIssue = false;
        issues.forEach(function (issue) {
            if (issue.ruleId === expectedIssue.ruleId) {
                foundIssue = true;
            }
        });
        return !foundIssue;
    }


    it('no issues for empty file', function () {
        var proLocation = path.join(__dirname, "data", "dummyProjNoConfigFiles");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "empty.js"));
        fileResources.push(fileResource);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        //console.log(JSON.stringify(result));
        expect(result).to.exist;
        expect(result.issues).to.exist;
        expect(result.issues).to.have.length(0);
        //expect(result[0].root).to.exist;
        //expect(result[0].root).to.be.empty;
        //expect(result[0].issues).to.have.length(0);
    });

    it('no eslintrc exists - uses default configuration', function () {
        var proLocation = path.join(__dirname, "data", "dummyProjNoConfigFiles");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "rule_no-extra-semi.js"));
        fileResources.push(fileResource);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        expect(result.issues).to.have.length(2);
        //expect(result[0].root).to.exist;
        //expect(result[0].root).to.be.empty;//TODO structure of return values from validators (case where no issues per file)??
        var ruleId1 = result.issues[0].ruleId;
        var ruleId2 = result.issues[1].ruleId;
        expect(result.issues[0].severity).to.equal("error");
        expect(result.issues[1].severity).to.equal("warning");

        assertInIssues(result.issues, {
                "category": "Best Practice",
                "checker": "ESLint",
                "column": 1,
                "line": 2,
                "helpUrl": "http://eslint.org/docs/rules/no-extra-semi",
                "message": "Unnecessary semicolon.",
                "path": fileResource.getPath(),
                "ruleId": "no-extra-semi",
                "severity": "error"
            }
        );
        assertInIssues(result.issues, {
                "category": "Variable",
                "checker": "ESLint",
                "column": 5,
                "line": 1,
                "helpUrl": "http://eslint.org/docs/rules/no-unused-vars",
                "message": "'x' is assigned a value but never used.",
                "path": fileResource.getPath(),
                "ruleId": "no-unused-vars",
                "severity": "warning"
            }
        );
    });

    it('.eslintignore file exists', function () {
        var proLocation = path.join(__dirname, "data", "dummyProjWithIgnoreFile");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "rule_no-extra-semi.js"));
        var fileResource2 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "toIgnore", "rule_no-extra-semi.js"));
        fileResources.push(fileResource1);
        fileResources.push(fileResource2);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        expect(result.issues).to.have.length(2);
        //expect(result[0].root).to.exist;
        //expect(result[0].root).to.be.empty;//TODO structure of return values from validators (case where no issues per file)??
        var ruleId1 = result.issues[0].ruleId;
        var ruleId2 = result.issues[1].ruleId;
        expect(result.issues[0].severity).to.equal("error");
        expect(result.issues[1].severity).to.equal("warning");
        assertInIssues(result.issues, {
                "category": "Best Practice",
                "checker": "ESLint",
                "column": 1,
                "line": 2,
                "helpUrl": "http://eslint.org/docs/rules/no-extra-semi",
                "message": "Unnecessary semicolon.",
                "path": fileResource1.getPath(),
                "ruleId": "no-extra-semi",
                "severity": "error"
            }
        );
        assertInIssues(result.issues, {
                "category": "Variable",
                "checker": "ESLint",
                "column": 5,
                "line": 1,
                "helpUrl": "http://eslint.org/docs/rules/no-unused-vars",
                "message": "'x' is assigned a value but never used.",
                "path": fileResource1.getPath(),
                "ruleId": "no-unused-vars",
                "severity": "warning"
            }
        );
    });

    it('uses .eslintrc only - with default rules ext values', function () {
        var proLocation = path.join(__dirname, "data", "dummyProjWithEslintrcNoExt");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "rule_no-extra-semi.js"));
        fileResources.push(fileResource);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        expect(result.issues).to.have.length(2);
        //expect(result[0].root).to.exist;
        //expect(result[0].root).to.be.empty;//TODO structure of return values from validators (case where no issues per file)??
        assertInIssues(result.issues, {
                "category": "Best Practice",
                "checker": "ESLint",
                "helpUrl": "http://eslint.org/docs/rules/no-extra-semi",
                "column": 1,
                "line": 2,
                "message": "Unnecessary semicolon.",
                "path": fileResource.getPath(),
                "ruleId": "no-extra-semi",
                "severity": "error"//taken from /defaultConfig/.eslintrc.ext.json
            }
        );
        assertInIssues(result.issues, {
                "category": "Variable",
                "checker": "ESLint",
                "helpUrl": "http://eslint.org/docs/rules/no-unused-vars",
                "column": 5,
                "line": 1,
                "message": "'x' is assigned a value but never used.",
                "path": fileResource.getPath(),
                "ruleId": "no-unused-vars",
                "severity": "warning"////taken from /defaultConfig/.eslintrc.ext.json
            }
        );
    });

    it('uses .eslintrc and .eslintrc.ext configuration', function () {
        var proLocation = path.join(__dirname, "data", "dummyProjWithEslintrcAndExt");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "rule_no-extra-semi.js"));
        fileResources.push(fileResource);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        expect(result.issues).to.have.length(2);
        //expect(result[0].root).to.exist;
        //expect(result[0].root).to.be.empty;//TODO structure of return values from validators (case where no issues per file)??
        assertInIssues(result.issues, {
                "category": "dummy",
                "checker": "ESLint",
                "column": 1,
                "helpUrl": "dummyUrl",
                "line": 2,
                "message": "Unnecessary semicolon.",
                "path": fileResource.getPath(),
                "ruleId": "no-extra-semi",
                "severity": "error"
            }
        );
        assertInIssues(result.issues, {
                "checker": "ESLint",
                "category": undefined,
                "helpUrl": undefined,
                "column": 5,
                "line": 1,
                "message": "'x' is assigned a value but never used.",
                "path": fileResource.getPath(),
                "ruleId": "no-unused-vars",
                "severity": "info"
            }
        );
    });

    it('uses .eslintrc and .eslintrc.ext configuration with filter level ["error"]', function () {
        var proLocation = path.join(__dirname, "data", "dummyProjWithEslintrcAndExt");
        var validationMetadata = new ValidationMetadata(proLocation, ["error"]);
        var fileResources = [];
        var fileResource = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "rule_no-extra-semi.js"));
        fileResources.push(fileResource);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        expect(result.issues).to.have.length(1);
        assertInIssues(result.issues, {
                "category": "dummy",
                "checker": "ESLint",
                "column": 1,
                "helpUrl": "dummyUrl",
                "line": 2,
                "message": "Unnecessary semicolon.",
                "path": fileResource.getPath(),
                "ruleId": "no-extra-semi",
                "severity": "error"
            }
        );
        assetNotInIssues(result.issues, {
                "checker": "ESLint",
                "category": undefined,
                "helpUrl": "http://eslint.org/docs/rules/no-unused-vars",
                "column": 5,
                "line": 1,
                "message": "'x' is assigned a value but never used.",
                "path": fileResource.getPath(),
                "ruleId": "no-unused-vars",
                "severity": "info"
            }
        );
    });

    it('jsvalidator in fiori flavor (based on emptyUI5Project dummy project - rule "sap-cross-application-navigation"). Local eslintrc.json file is part of the project.', function () {
        var proLocation = path.join(__dirname, "data", "emptyUI5Project");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "sap-cross-application-navigation.js"));
        fileResources.push(fileResource1);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        assertInIssues(result.issues, {
                "category": "Fiori Architectural Guidelines",
                "checker": "ESLint",
                "column": 1,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?6de3ec7327e0432cae87fc83f06db827.html",
                "line": 1,
                "message": "Do not use a static list of cross-application navigation targets.",
                "path": fileResource1.getPath(),
                "ruleId": "sap-cross-application-navigation",
                "severity": "warning"
            }
        );
    });

    it('jsvalidator in fiori flavor (based on emptyUI5Project dummy project - rule "sap-forbidden-window-property"). Local eslintrc.json file is part of the project.', function () {
        var proLocation = path.join(__dirname, "data", "emptyUI5Project");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "sap-forbidden-window-property.js"));
        fileResources.push(fileResource1);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        assertInIssues(result.issues, {
                "category": "Fiori Architectural Guidelines",
                "checker": "ESLint",
                "column": 11,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?405a42f7628444a1ab370a4b53eb236e.html",
                "line": 1,
                "message": "Usage of a forbidden window property.",
                "path": fileResource1.getPath(),
                "ruleId": "sap-forbidden-window-property",
                "severity": "warning"
            }
        );
    });

    it('jsvalidator in fiori flavor (based on emptyUI5Project dummy project - rule "sap-message-toast"). Local eslintrc.json file is part of the project.', function () {
        var proLocation = path.join(__dirname, "data", "emptyUI5Project");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "sap-message-toast.js"));
        fileResources.push(fileResource1);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        assertInIssues(result.issues, {
                "category": "Design Guidelines",
                "checker": "ESLint",
                "column": 1,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?5b3269859327434d887d66ec556628e5.html",
                "line": 1,
                "message": "Value for duration of sap.m.MessageToast.show should be greater or equal to 3000!",
                "path": fileResource1.getPath(),
                "ruleId": "sap-message-toast",
                "severity": "warning"
            }
        );
    });

    it('jsvalidator in fiori flavor (based on emptyUI5Project dummy project - rule "sap-no-br-on-return"). Local eslintrc.json file is part of the project.', function () {
        var proLocation = path.join(__dirname, "data", "emptyUI5Project");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "sap-no-br-on-return.js"));
        fileResources.push(fileResource1);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        assertInIssues(result.issues, {
                "category": "Fiori Architectural Guidelines",
                "checker": "ESLint",
                "column": 11,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?b7d6ceb27b734fc48c5fd28bbd6346f7.html",
                "line": 1,
                "message": "insertBrOnReturn is not allowed since it is a Mozilla specific method, other browsers don't support that.",
                "path": fileResource1.getPath(),
                "ruleId": "sap-no-br-on-return",
                "severity": "error"
            }
        );
    });

    it('jsvalidator in fiori flavor (based on emptyUI5Project dummy project - rule "sap-no-dom-access"). Local eslintrc.json file is part of the project.', function () {
        var proLocation = path.join(__dirname, "data", "emptyUI5Project");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "sap-no-dom-access.js"));
        fileResources.push(fileResource1);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        assertInIssues(result.issues, {
                "category": "Fiori Architectural Guidelines",
                "checker": "ESLint",
                "column": 1,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?e9fc2bbf028f4ca78402e8f2b706563f.html",
                "line": 1,
                "message": "Direct DOM access, use jQuery selector instead",
                "path": fileResource1.getPath(),
                "ruleId": "sap-no-dom-access",
                "severity": "warning"
            }
        );
    });

    it('jsvalidator in fiori flavor (based on emptyUI5Project dummy project - rule "sap-no-dom-insertion"). Local eslintrc.json file is part of the project.', function () {
        var proLocation = path.join(__dirname, "data", "emptyUI5Project");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "sap-no-dom-insertion.js"));
        fileResources.push(fileResource1);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        assertInIssues(result.issues, {
                "category": "Fiori Architectural Guidelines",
                "checker": "ESLint",
                "column": 1,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?e9601b0b056c41b8a67a448075767941.html",
                "line": 1,
                "message": "Direct DOM insertion is forbidden!",
                "path": fileResource1.getPath(),
                "ruleId": "sap-no-dom-insertion",
                "severity": "warning"
            }
        );
    });

    it('jsvalidator in fiori flavor (based on emptyUI5Project dummy project - rule "sap-no-dynamic-style-insertion"). Local eslintrc.json file is part of the project.', function () {
        var proLocation = path.join(__dirname, "data", "emptyUI5Project");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "sap-no-dynamic-style-insertion.js"));
        fileResources.push(fileResource1);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        assertInIssues(result.issues, {
                "category": "Fiori Architectural Guidelines",
                "checker": "ESLint",
                "column": 13,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?29ca097fdefb4d6fa08c762a6d8228f9.html",
                "line": 1,
                "message": "Dynamic style insertion, use library CSS or lessifier instead",
                "path": fileResource1.getPath(),
                "ruleId": "sap-no-dynamic-style-insertion",
                "severity": "error"
            }
        );
    });

    it('jsvalidator in fiori flavor (based on emptyUI5Project dummy project - rule "sap-no-element-creation"). Local eslintrc.json file is part of the project.', function () {
        var proLocation = path.join(__dirname, "data", "emptyUI5Project");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "sap-no-element-creation.js"));
        fileResources.push(fileResource1);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        assertInIssues(result.issues, {
                "category": "Fiori Architectural Guidelines",
                "checker": "ESLint",
                "column": 1,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?bcc8321a07d44e2caecf7c26048b7607.html",
                "line": 1,
                "message": "Direct element creation, create a custom control instead",
                "path": fileResource1.getPath(),
                "ruleId": "sap-no-element-creation",
                "severity": "error"
            }
        );
    });

    it('jsvalidator in fiori flavor (based on emptyUI5Project dummy project - rule "sap-no-encode-file-service"). Local eslintrc.json file is part of the project.', function () {
        var proLocation = path.join(__dirname, "data", "emptyUI5Project");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "sap-no-encode-file-service.js"));
        fileResources.push(fileResource1);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        assertInIssues(result.issues, {
                "category": "Fiori Architectural Guidelines",
                "checker": "ESLint",
                "column": 15,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?5b9448b55e904414b0a4e82e15de2a80.html",
                "line": 2,
                "message": "Usage of phrase '/sap/bc/ui2/encode_file' detected",
                "path": fileResource1.getPath(),
                "ruleId": "sap-no-encode-file-service",
                "severity": "warning"
            }
        );
    });

    it('jsvalidator in fiori flavor (based on emptyUI5Project dummy project - rule "sap-no-exec-command"). Local eslintrc.json file is part of the project.', function () {
        var proLocation = path.join(__dirname, "data", "emptyUI5Project");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "sap-no-exec-command.js"));
        fileResources.push(fileResource1);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        assertInIssues(result.issues, {
                "category": "Fiori Architectural Guidelines",
                "checker": "ESLint",
                "column": 1,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?617f912454a547eab7f0cd48faab501c.html",
                "line": 1,
                "message": "Direct DOM Manipulation, better to use jQuery.appendTo if really needed",
                "path": fileResource1.getPath(),
                "ruleId": "sap-no-exec-command",
                "severity": "error"
            }
        );
    });

    it('jsvalidator in fiori flavor (based on emptyUI5Project dummy project - rule "sap-no-global-define"). Local eslintrc.json file is part of the project.', function () {
        var proLocation = path.join(__dirname, "data", "emptyUI5Project");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "sap-no-global-define.js"));
        fileResources.push(fileResource1);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        assertInIssues(result.issues, {
                "category": "Fiori Architectural Guidelines",
                "checker": "ESLint",
                "column": 1,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?182ab2fee1b546b682f43a8342d92110.html",
                "line": 1,
                "message": "Definition of global variable/api in window object is not permitted.",
                "path": fileResource1.getPath(),
                "ruleId": "sap-no-global-define",
                "severity": "error"
            }
        );
    });

    it('jsvalidator in fiori flavor (based on emptyUI5Project dummy project - rule "sap-no-global-event"). Local eslintrc.json file is part of the project.', function () {
        var proLocation = path.join(__dirname, "data", "emptyUI5Project");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "sap-no-global-event.js"));
        fileResources.push(fileResource1);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        assertInIssues(result.issues, {
                "category": "Fiori Architectural Guidelines",
                "checker": "ESLint",
                "column": 1,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?ec4c8170ec4e42a4accbde5627883ed0.html",
                "line": 1,
                "message": "Global event handling override is not permitted, please modify only single events",
                "path": fileResource1.getPath(),
                "ruleId": "sap-no-global-event",
                "severity": "error"
            }
        );
    });

    it('jsvalidator in fiori flavor (based on emptyUI5Project dummy project - rule "sap-no-global-selection"). Local eslintrc.json file is part of the project.', function () {
        var proLocation = path.join(__dirname, "data", "emptyUI5Project");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "sap-no-global-selection.js"));
        fileResources.push(fileResource1);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        assertInIssues(result.issues, {
                "category": "Fiori Architectural Guidelines",
                "checker": "ESLint",
                "column": 1,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?eebc1cf8f9744b7d81d27d6f944e593e.html",
                "line": 1,
                "message": "Global selection modification, only modify local selections",
                "path": fileResource1.getPath(),
                "ruleId": "sap-no-global-selection",
                "severity": "warning"
            }
        );
    });

    it('jsvalidator in fiori flavor (based on emptyUI5Project dummy project - rule "sap-no-hardcoded-color"). Local eslintrc.json file is part of the project.', function () {
        var proLocation = path.join(__dirname, "data", "emptyUI5Project");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "sap-no-hardcoded-color.js"));
        fileResources.push(fileResource1);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        assertInIssues(result.issues, {
                "category": "Fiori Architectural Guidelines",
                "checker": "ESLint",
                "column": 3,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?b8b7dca7caf342f590c21a5ef91e2f2b.html",
                "line": 1,
                "message": "Hardcoded colors are not allowed as they will break theming effort.",
                "path": fileResource1.getPath(),
                "ruleId": "sap-no-hardcoded-color",
                "severity": "error"
            }
        );
    });

    it('jsvalidator in fiori flavor (based on emptyUI5Project dummy project - rule "sap-no-history-manipulation"). Local eslintrc.json file is part of the project.', function () {
        var proLocation = path.join(__dirname, "data", "emptyUI5Project");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "sap-no-history-manipulation.js"));
        fileResources.push(fileResource1);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        assertInIssues(result.issues, {
                "category": "Fiori Architectural Guidelines",
                "checker": "ESLint",
                "column": 1,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?499b03d3fb8a427da8172fb29e90b11c.html",
                "line": 4,
                "message": "Direct history manipulation, does not work with deep links, use router and navigation events instead",
                "path": fileResource1.getPath(),
                "ruleId": "sap-no-history-manipulation",
                "severity": "warning"
            }
        );
    });

    it('jsvalidator in fiori flavor (based on emptyUI5Project dummy project - rule "sap-no-jquery-device-api"). Local eslintrc.json file is part of the project.', function () {
        var proLocation = path.join(__dirname, "data", "emptyUI5Project");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "sap-no-jquery-device-api.js"));
        fileResources.push(fileResource1);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        assertInIssues(result.issues, {
                "category": "Fiori Architectural Guidelines",
                "checker": "ESLint",
                "column": 5,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?beddb5286d6a4249924161e1ba3af8fc.html",
                "line": 1,
                "message": "jQuery.device or $.device are deprecated since 1.20! use the respective functions of sap.ui.Device",
                "path": fileResource1.getPath(),
                "ruleId": "sap-no-jquery-device-api",
                "severity": "error"
            }
        );
    });

    it('jsvalidator in fiori flavor (based on emptyUI5Project dummy project - rule "sap-no-localhost"). Local eslintrc.json file is part of the project.', function () {
        var proLocation = path.join(__dirname, "data", "emptyUI5Project");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "sap-no-localhost.js"));
        fileResources.push(fileResource1);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        assertInIssues(result.issues, {
                "category": "Fiori Architectural Guidelines",
                "checker": "ESLint",
                "column": 23,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?e380312c1cba4bc58b3cd1d91ac7eab0.html",
                "line": 2,
                "message": "Usage of 'localhost' detected",
                "path": fileResource1.getPath(),
                "ruleId": "sap-no-localhost",
                "severity": "info"
            }
        );
    });

    it('jsvalidator in fiori flavor (based on emptyUI5Project dummy project - rule "sap-no-localstorage"). Local eslintrc.json file is part of the project.', function () {
        var proLocation = path.join(__dirname, "data", "emptyUI5Project");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "sap-no-localstorage.js"));
        fileResources.push(fileResource1);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        assertInIssues(result.issues, {
                "category": "Fiori Architectural Guidelines",
                "checker": "ESLint",
                "column": 1,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?a3c3668c943c4938b2d53015e2a4c66d.html",
                "line": 1,
                "message": "Local storage must not be used in a Fiori application",
                "path": fileResource1.getPath(),
                "ruleId": "sap-no-localstorage",
                "severity": "error"
            }
        );
    });

    it('jsvalidator in fiori flavor (based on emptyUI5Project dummy project - rule "sap-no-location-reload"). Local eslintrc.json file is part of the project.', function () {
        var proLocation = path.join(__dirname, "data", "emptyUI5Project");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "sap-no-location-reload.js"));
        fileResources.push(fileResource1);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        assertInIssues(result.issues, {
                "category": "Fiori Architectural Guidelines",
                "checker": "ESLint",
                "column": 1,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?7d0dba71a2cb45ebb1959daba904ca99.html",
                "line": 1,
                "message": "location.reload() is not permitted.",
                "path": fileResource1.getPath(),
                "ruleId": "sap-no-location-reload",
                "severity": "error"
            }
        );
    });

    it('jsvalidator in fiori flavor (based on emptyUI5Project dummy project - rule "sap-no-location-usage"). Local eslintrc.json file is part of the project.', function () {
        var proLocation = path.join(__dirname, "data", "emptyUI5Project");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "sap-no-location-usage.js"));
        fileResources.push(fileResource1);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        assertInIssues(result.issues, {
                "category": "Fiori Architectural Guidelines",
                "checker": "ESLint",
                "column": 1,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?393341754fee4a8d8252cd8ab63d4482.html",
                "line": 5,
                "message": "Override of location",
                "path": fileResource1.getPath(),
                "ruleId": "sap-no-location-usage",
                "severity": "warning"
            }
        );
    });

    it('jsvalidator in fiori flavor (based on emptyUI5ProjectWithoutLocalEslintrcFile dummy project - rule "sap-no-hardcoded-url"). Local eslintrc.json file is not part of the project.', function () {
        var proLocation = path.join(__dirname, "data", "emptyUI5ProjectWithoutLocalEslintrcFile");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "1.js"));
        var fileResource2 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "webapp", "Component.js"));
        fileResources.push(fileResource1);
        fileResources.push(fileResource2);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        assertInIssues(result.issues, {
                "category": "Fiori Architectural Guidelines",
                "checker": "ESLint",
                "column": 9,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?fa158d772a2a48bc9b1530713ac03bbd.html",
                "line": 1,
                "message": "Hardcoded (non relative) URL found.",
                "path": fileResource1.getPath(),
                "ruleId": "sap-no-hardcoded-url",
                "severity": "error"
            }
        );
        assertInIssues(result.issues, {
                "category": "Fiori Architectural Guidelines",
                "checker": "ESLint",
                "column": 11,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?405a42f7628444a1ab370a4b53eb236e.html",
                "line": 1,
                "message": "Usage of a forbidden window property.",
                "path": fileResource2.getPath(),
                "ruleId": "sap-forbidden-window-property",
                "severity": "warning"
            }
        );
        assertInIssues(result.issues, {
                "category": "Design Guidelines",
                "checker": "ESLint",
                "column": 1,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?5b3269859327434d887d66ec556628e5.html",
                "line": 2,
                "message": "Value for duration of sap.m.MessageToast.show should be greater or equal to 3000!",
                "path": fileResource1.getPath(),
                "ruleId": "sap-message-toast",
                "severity": "warning"
            }
        );
    });

    it('jsvalidator in fiori flavor (based on emptyUI5Project dummy project - rule "sap-usage-basemastercontroller"). Local eslintrc.json file is part of the project.', function () {
        var proLocation = path.join(__dirname, "data", "emptyUI5Project");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "sap-usage-basemastercontroller.js"));
        fileResources.push(fileResource1);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        assertInIssues(result.issues, {
                "category": "Fiori Architectural Guidelines",
                "checker": "ESLint",
                "column": 9,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?ab731565251e425da345a156f91def57.html",
                "line": 4,
                "message": "Usage of deprecated 'BaseMasterController' detected. Please use 'ScfldMasterController' instead.",
                "path": fileResource1.getPath(),
                "ruleId": "sap-usage-basemastercontroller",
                "severity": "warning"
            }
        );
    });

    it('jsvalidator in fiori flavor (based on emptyUI5Project dummy project - rule "sap-ui5-no-private-prop"). Local eslintrc.json file is part of the project.', function () {
        var proLocation = path.join(__dirname, "data", "emptyUI5Project");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "sap-ui5-no-private-prop.js"));
        fileResources.push(fileResource1);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        assertInIssues(result.issues, {
                "category": "Fiori Architectural Guidelines",
                "checker": "ESLint",
                "column": 31,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?66833af014f54bf5bbb9fb31a355c089.html",
                "line": 4,
                "message": "Usage of a private property or function from UI5 element.",
                "path": fileResource1.getPath(),
                "ruleId": "sap-ui5-no-private-prop",
                "severity": "warning"
            }
        );
    });

    it('jsvalidator in fiori flavor (based on emptyUI5Project dummy project - rule "sap-timeout-usage"). Local eslintrc.json file is part of the project.', function () {
        var proLocation = path.join(__dirname, "data", "emptyUI5Project");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "sap-timeout-usage.js"));
        fileResources.push(fileResource1);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        assertInIssues(result.issues, {
                "category": "Fiori Architectural Guidelines",
                "checker": "ESLint",
                "column": 1,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?c6dc4a756ae34861984b4ec56ada0974.html",
                "line": 1,
                "message": "Timeout with value > 0",
                "path": fileResource1.getPath(),
                "ruleId": "sap-timeout-usage",
                "severity": "warning"
            }
        );
    });

    it('jsvalidator in fiori flavor (based on emptyUI5Project dummy project - rule "sap-no-sessionstorage"). Local eslintrc.json file is part of the project.', function () {
        var proLocation = path.join(__dirname, "data", "emptyUI5Project");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "sap-no-sessionstorage.js"));
        fileResources.push(fileResource1);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        assertInIssues(result.issues, {
                "category": "Fiori Architectural Guidelines",
                "checker": "ESLint",
                "column": 1,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?da1b89e518e843238375015e84e4df04.html",
                "line": 1,
                "message": "For security reasons, the usage of session storage is not allowed in a Fiori application",
                "path": fileResource1.getPath(),
                "ruleId": "sap-no-sessionstorage",
                "severity": "error"
            }
        );
    });

    it('jsvalidator in fiori flavor (based on emptyUI5Project dummy project - rule "sap-no-proprietary-browser-api"). Local eslintrc.json file is part of the project.', function () {
        var proLocation = path.join(__dirname, "data", "emptyUI5Project");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "sap-no-proprietary-browser-api.js"));
        fileResources.push(fileResource1);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        assertInIssues(result.issues, {
                "category": "Fiori Architectural Guidelines",
                "checker": "ESLint",
                "column": 1,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?edeb59094b544c98b130ee0802c08969.html",
                "line": 8,
                "message": "Proprietary Browser API access, use jQuery selector instead",
                "path": fileResource1.getPath(),
                "ruleId": "sap-no-proprietary-browser-api",
                "severity": "warning"
            }
        );
    });

    it('jsvalidator in fiori flavor (based on emptyUI5Project dummy project - rule "sap-no-override-storage-prototype"). Local eslintrc.json file is part of the project.', function () {
        var proLocation = path.join(__dirname, "data", "emptyUI5Project");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "sap-no-override-storage-prototype.js"));
        fileResources.push(fileResource1);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        assertInIssues(result.issues, {
                "category": "Fiori Architectural Guidelines",
                "checker": "ESLint",
                "column": 1,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?34bfc0d136564b6fb0ab8684381062b4.html",
                "line": 1,
                "message": "Storage prototype should not be overridden as this can lead to unpredictable errors",
                "path": fileResource1.getPath(),
                "ruleId": "sap-no-override-storage-prototype",
                "severity": "error"
            }
        );
    });

    it('jsvalidator in fiori flavor (based on emptyUI5Project dummy project - rule "sap-no-override-rendering"). Local eslintrc.json file is part of the project.', function () {
        var proLocation = path.join(__dirname, "data", "emptyUI5Project");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "sap-no-override-rendering.js"));
        fileResources.push(fileResource1);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        assertInIssues(result.issues, {
                "category": "Fiori Architectural Guidelines",
                "checker": "ESLint",
                "column": 1,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?375b9940702c4560be297388e7ba46e3.html",
                "line": 2,
                "message": "Override of rendering or getter or setter is not permitted",
                "path": fileResource1.getPath(),
                "ruleId": "sap-no-override-rendering",
                "severity": "error"
            }
        );
    });

    it('jsvalidator in fiori flavor (based on emptyUI5Project dummy project - rule "sap-no-navigator"). Local eslintrc.json file is part of the project.', function () {
        var proLocation = path.join(__dirname, "data", "emptyUI5Project");
        var validationMetadata = new ValidationMetadata(proLocation);
        var fileResources = [];
        var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "sap-no-navigator.js"));
        fileResources.push(fileResource1);
        var result = jsvalidator.validateFiles(validationMetadata, fileResources);
        console.log(JSON.stringify(result));
        expect(result).to.exist;
        assertInIssues(result.issues, {
                "category": "Fiori Architectural Guidelines",
                "checker": "ESLint",
                "column": 16,
                "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?fbb12d08b6994c1fa39a6f9d55865f52.html",
                "line": 1,
                "message": "navigator usage is forbidden, use sap.ui.Device API instead",
                "path": fileResource1.getPath(),
                "ruleId": "sap-no-navigator",
                "severity": "error"
            }
        );
    });

    /*    it('jsvalidator in fiori flavor (based on emptyUI5Project dummy project - rule "sap-no-absolute-component-path"). Local eslintrc.json file is part of the project.', function () {
     var proLocation = path.join(__dirname, "data", "emptyUI5Project");
     var validationMetadata = new ValidationMetadata(proLocation);
     var fileResources = [];
     var fileResource1 = new FileResource(validationMetadata.getRootPath(), path.join(validationMetadata.getRootPath(), "sap-no-absolute-component-path.js"));
     fileResources.push(fileResource1);
     var result = jsvalidator.validateFiles(validationMetadata, fileResources);
     console.log(JSON.stringify(result));
     expect(result).to.exist;
     expect(result.issues).to.have.length(6);  // TODO: Currently we have 6 issues. Since the fiori .eslintrc is still basing on eslint 0.24 - not all rules are adjusted
     assertInIssues(result.issues, {
     "category": "Design Guidelines",
     "checker": "ESLint",
     "column": 1,
     "helpUrl": "https://help.hana.ondemand.com/webide/frameset.htm?5b3269859327434d887d66ec556628e5.html",
     "line": 1,
     "message": "Value for duration of sap.m.MessageToast.show should be greater or equal to 3000!",
     "path": fileResource1.getPath(),
     "ruleId": "sap-no-absolute-component-path",
     "severity": "warning"
     }
     );
     });*/

    afterEach(function () {
        sandbox.restore();
    });

});
