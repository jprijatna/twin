if (typeof define !== 'function') {var define = require('amdefine')(module)};
var domParser = require('../lib/xmlparser');

define([] , function() {

    "use strict";
    var SEVERITY_WARNING = "warning";
    var SEVERITY_ERROR = "error";
    var SEVERITY_FATAL_ERROR = "fatalError";

    function _convertParseError(oParser, sFullPath) {
        var that = this;
        var warn = SEVERITY_WARNING, error = SEVERITY_ERROR, fatal = SEVERITY_FATAL_ERROR;

        var oResult = {
            "root": {},
            "issues": []
        };
        if (oParser && oParser.options && oParser.options.errors) {
            var aErrors = oParser.options.errors;
            if (aErrors.length) {
                var oIssueBuilder = {};
                oIssueBuilder[warn] = function (oIssue) {
                    if (oResult.root.severity !== error || oResult.root.severity !== fatal) {
                        oResult.root.severity = warn;
                    }
                    oIssue.severity = warn;
                    return oIssue;
                };
                oIssueBuilder[error] = function (oIssue) {
                    oResult.root.severity = error;
                    oIssue.severity = error;
                    return oIssue;

                };
                oIssueBuilder[fatal] = function (oIssue) {
                    oIssueBuilder[error](oIssue);
                };

                aErrors.forEach(function (error) {
                    var oIssue = {
                        category: "Syntax Error",
                        checker: "",
                        helpUrl: "",
                        line: error.row,
                        column: error.column,
                        message: error.text,
                        source: "",
                        path: sFullPath
                    };
                    if (typeof oIssueBuilder[error.type.toLowerCase()] !== 'function') {
                        that.context.service.log.error(that.context.service.xmlvalidator.getProxyMetadata().getName(), "wrong severity value sent by dom parser: " + error.type, ["system"]).done();
                        oResult.issues.push(oIssueBuilder[SEVIRITY_ERROR](oIssue));
                    } else {
                        oResult.issues.push(oIssueBuilder[error.type](oIssue));
                    }
                });
            }
        }
        return oResult;
    }

    return {
        validateFiles: function validateFiles(validationMetadata, fileResources, contextState) {
            var report = {issues:[]};
            fileResources.forEach(function (fileResource) {
                var parser = new domParser.DomParser();
                parser.parseFromString(fileResource.getText());
                var errors = _convertParseError(parser, fileResource.getPath());
                errors = errors || {issues:[]};
                //resultsHandler(errors, fileResource.getRelativePath());
                report.issues = report.issues.concat(errors.issues);
            });
            return report;
        }
    }
});